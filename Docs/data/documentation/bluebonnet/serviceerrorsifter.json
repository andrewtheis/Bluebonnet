{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceErrorSifter"}]}]},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error is sent to the registered "},{"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorTransformer","type":"reference","isActive":true},{"text":" types first (if any), and then  the transformed (or original) error is sent to the registered ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorHandler"},{"text":" types.","type":"text"}]}],"type":"aside","name":"Note"}],"kind":"content"}],"abstract":[{"text":"Register your ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorTransformer","type":"reference"},{"type":"text","text":" types and "},{"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorHandler","isActive":true,"type":"reference"},{"type":"text","text":" with this type."}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter\/add(_:)-8ezah","doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter\/add(_:)-9j0cm"],"title":"Instance Methods"},{"identifiers":["doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter\/shared"],"title":"Type Properties"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Bluebonnet\/documentation\/Bluebonnet"]]},"identifier":{"url":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter","interfaceLanguage":"swift"},"metadata":{"externalID":"s:10Bluebonnet18ServiceErrorSifterC","modules":[{"name":"Bluebonnet"}],"navigatorTitle":[{"text":"ServiceErrorSifter","kind":"identifier"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ServiceErrorSifter","kind":"identifier"}],"role":"symbol","symbolKind":"class","title":"ServiceErrorSifter"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bluebonnet\/serviceerrorsifter"]}],"references":{"doc://Bluebonnet/documentation/Bluebonnet/ServiceErrorSifter/add(_:)-8ezah":{"title":"add(_:)","role":"symbol","url":"\/documentation\/bluebonnet\/serviceerrorsifter\/add(_:)-8ezah","kind":"symbol","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter\/add(_:)-8ezah","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"add","kind":"identifier"},{"kind":"text","text":"(any "},{"text":"ServiceErrorHandler","kind":"typeIdentifier","preciseIdentifier":"s:10Bluebonnet19ServiceErrorHandlerP"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Adds the given ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorHandler","type":"reference"},{"type":"text","text":" to the sifter. Handlers are run through in the order added."},{"text":" ","type":"text"},{"type":"text","text":"If a handler consumes an error, it is not sent to any subsequent handlers."}]},"doc://Bluebonnet/documentation/Bluebonnet/ServiceRequest":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceRequest"}],"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceRequest","kind":"symbol","navigatorTitle":[{"text":"ServiceRequest","kind":"identifier"}],"role":"symbol","type":"topic","title":"ServiceRequest","url":"\/documentation\/bluebonnet\/servicerequest","abstract":[]},"doc://Bluebonnet/documentation/Bluebonnet/ServiceErrorSifter":{"role":"symbol","abstract":[{"text":"Register your ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorTransformer","type":"reference"},{"text":" types and ","type":"text"},{"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorHandler","isActive":true,"type":"reference"},{"type":"text","text":" with this type."}],"url":"\/documentation\/bluebonnet\/serviceerrorsifter","title":"ServiceErrorSifter","kind":"symbol","type":"topic","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter","navigatorTitle":[{"kind":"identifier","text":"ServiceErrorSifter"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ServiceErrorSifter","kind":"identifier"}]},"doc://Bluebonnet/documentation/Bluebonnet/ServiceRequest/start()-21jw":{"required":true,"url":"\/documentation\/bluebonnet\/servicerequest\/start()-21jw","title":"start()","role":"symbol","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceRequest\/start()-21jw","abstract":[{"type":"text","text":"Builds the underlying data task loads data via the "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":". This method is implemented by the default extension."}],"defaultImplementations":1,"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ServiceResponseContent","preciseIdentifier":"s:10Bluebonnet14ServiceRequestP0B15ResponseContentQa"},{"text":"?","kind":"text"}]},"doc://Bluebonnet/documentation/Bluebonnet":{"type":"topic","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet","role":"collection","abstract":[],"url":"\/documentation\/bluebonnet","title":"Bluebonnet","kind":"symbol"},"doc://Bluebonnet/documentation/Bluebonnet/ServiceErrorSifter/shared":{"title":"shared","role":"symbol","url":"\/documentation\/bluebonnet\/serviceerrorsifter\/shared","kind":"symbol","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"ServiceErrorSifter","kind":"typeIdentifier","preciseIdentifier":"s:10Bluebonnet18ServiceErrorSifterC"}],"type":"topic","abstract":[]},"doc://Bluebonnet/documentation/Bluebonnet/ServiceErrorTransformer":{"role":"symbol","abstract":[{"type":"text","text":"Conform to this protocol to transform an error from a "},{"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceRequest","type":"reference","isActive":true},{"text":" to another error.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When a  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceRequest"},{"type":"text","text":" receives anything other than a 2xx or Bluebonnet generates an error internally you can handle the error and any possible data globally with a transformer."},{"type":"text","text":" "},{"text":"This is useful if your services return errors in a standard JSON format.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter","isActive":true},{"text":" for more","type":"text"}],"url":"\/documentation\/bluebonnet\/serviceerrortransformer","title":"ServiceErrorTransformer","kind":"symbol","type":"topic","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorTransformer","navigatorTitle":[{"text":"ServiceErrorTransformer","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ServiceErrorTransformer","kind":"identifier"}]},"doc://Bluebonnet/documentation/Bluebonnet/ServiceErrorHandler":{"role":"symbol","title":"ServiceErrorHandler","type":"topic","abstract":[{"type":"text","text":"Conform to this protocol to handle an error from a "},{"type":"reference","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceRequest","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This allows you to handle common errors in a global way. While the error will still be thrown by "},{"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceRequest\/start()-21jw","isActive":true,"type":"reference"},{"text":" You can ignore it if you know itâ€™s being handled by one of these types.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"See "},{"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter","type":"reference","isActive":true},{"text":" for more info.","type":"text"}],"identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServiceErrorHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/bluebonnet\/serviceerrorhandler","navigatorTitle":[{"kind":"identifier","text":"ServiceErrorHandler"}]},"doc://Bluebonnet/documentation/Bluebonnet/ServiceErrorSifter/add(_:)-9j0cm":{"title":"add(_:)","role":"symbol","url":"\/documentation\/bluebonnet\/serviceerrorsifter\/add(_:)-9j0cm","kind":"symbol","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorSifter\/add(_:)-9j0cm","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"add"},{"text":"(any ","kind":"text"},{"kind":"typeIdentifier","text":"ServiceErrorTransformer","preciseIdentifier":"s:10Bluebonnet23ServiceErrorTransformerP"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Adds the given ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Bluebonnet\/documentation\/Bluebonnet\/ServiceErrorTransformer"},{"text":" to the sifter. Transformers are run through in the order added.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Once a transformer transforms an error, neither the original error or transformed error are sent to any other transformers."}]}}}